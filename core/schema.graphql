### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type Account {
  currency: Currency!
  id: Int!
  name: String!
}

input AccountCreateInput {
  currency: Currency!
  name: String!
}

input AccountUpdateInput {
  currency: Currency
  id: Int
  name: String
}

input AccountUpdateManyMutationInput {
  currency: Currency
  id: Int
  name: String
}

input AccountWhereInput {
  AND: [AccountWhereInput!]
  currency: Currency
  id: IntFilter
  name: StringFilter
  NOT: [AccountWhereInput!]
  OR: [AccountWhereInput!]
}

input AccountWhereUniqueInput {
  id: Int
}

type BatchPayload {
  count: Int!
}

"""Possible Currencies"""
enum Currency {
  BTC
  EUR
  GBP
  GOLD
  PLN
  USD
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: Int
  notIn: [Int!]
}

type Mutation {
  createOneAccount(data: AccountCreateInput!): Account!
  deleteManyAccount(where: AccountWhereInput): BatchPayload!
  deleteOneAccount(where: AccountWhereUniqueInput!): Account
  updateManyAccount(data: AccountUpdateManyMutationInput!, where: AccountWhereInput): BatchPayload!
  updateOneAccount(data: AccountUpdateInput!, where: AccountWhereUniqueInput!): Account
  upsertOneAccount(create: AccountCreateInput!, update: AccountUpdateInput!, where: AccountWhereUniqueInput!): Account!
}

type Query {
  account(where: AccountWhereUniqueInput!): Account
  accounts(after: AccountWhereUniqueInput, before: AccountWhereUniqueInput, first: Int, last: Int, skip: Int): [Account!]!
  currencies: [Currency!]!
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: String
  notIn: [String!]
  startsWith: String
}
